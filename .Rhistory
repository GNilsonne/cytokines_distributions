group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
df <- data.frame(dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("output/%s-fitdistr-dnorm.csv", .y$ind[1]), col.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("output/%s-fitdistr-dexp.csv", .y$ind[1]), col.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
df <- list.files(path='ouptut') %>%
lapply(read_csv) %>%
bind_rows
View(df)
list.files(path='ouptut/*')
list.files(path='ouptut')
setwd("C:/Users/lovea/MetaResearch/cytokines_distributions")
list.files(path='ouptut')
list.files(path='./ouptut')
list.files(path='./outut')
list.files(path='./output')
outputs <- list.files(path='./output') %>%
lapply(read_csv) %>%
bind_rows
setwd("output")
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("output/%s-fitdistr-dnorm.csv", .y$ind[1]), col.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("output/%s-fitdistr-dexp.csv", .y$ind[1]), col.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
IL6_only <- bind_rows(IL6Abhimanyu, IL6Wand_stacked, IL6Imaeda, IL6Imaeda_v, IL6Sothern, IL6Lekander)
colnames(IL6_only) <- c("Abhimanyu", "Wand", "Imaeda", "Imaeda_v", "Sothern", "Lekander")
IL6_only_stacked <- data.frame(stack(IL6_only)) %>% filter(!is.na(values))
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("output/%s-fitdistr-dnorm.csv", .y$ind[1]), col.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("output/%s-fitdistr-dexp.csv", .y$ind[1]), col.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
# To simplify the syntax when writing files
setwd("output")
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]))
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic, row.names = F)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]))
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
View(outputs)
outputs_out <- outputs[,-1]
View(outputs_out)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]))
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]))
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
outputs_out <- outputs[,-1]
View(outputs_out)
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
outputs_out <- outputs[,-1]
write.csv(outputs_out, "all_outputs.csv")
write.csv(outputs_out, "all_outputs.csv", row.names = F)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
outputs_out <- outputs[,-1]
View(outputs_out)
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
write.csv(outputs_out, "all_outputs.csv", row.names = F)
# Stack data in a 2 column df
IL6_only <- bind_rows(IL6Abhimanyu, IL6Wand_stacked, IL6Imaeda, IL6Imaeda_v, IL6Sothern, IL6Lekander)
colnames(IL6_only) <- c("Abhimanyu", "Wand", "Imaeda", "Imaeda_v", "Sothern", "Lekander")
IL6_only_stacked <- data.frame(stack(IL6_only)) %>% filter(!is.na(values))
# To simplify the syntax when writing files
setwd("output")
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
View(outputs)
View(outputs)
View(outputs)
View(outputs)
# Clear environment
rm(list=ls())
# Require packages
require(foreign)
require(tidyverse)
setwd("C:/Users/lovea/MetaResearch/cytokines_distributions/IL6_data")
# Read data from files
Abhimanyu_df <- read.csv2("Abhimanyu_derivation.csv")
Sothern_df <- read.csv2("Sothern1995IndividualData.csv")
Imaeda_df <- read.csv2("Imaeda derivation.csv", na.strings = c("", "NA"), check.names = F, encoding = "UTF-8")
Imaeda_v_df <- read.csv2("Imaeda validation.csv", na.strings = c("", "NA"), check.names = F, encoding = "UTF-8")
Wand_df <- read.csv2("Wand (2016) data.csv")
MIDUS_df <- load("29282-0001-Data.rda")
IL6MIDUS <- data.frame(da29282.0001$B4BMSDIL6)
IL6MIDUS2 <- data.frame(da29282.0001$B4BIL6)
MIDJA_df <- load("34969-0001-Data.rda")
IL6MIDJA <- data.frame(da34969.0001$J2BIL6)
Lekander <- read.dta("psd_srh_il6.dta")
Lekander_df <- data.frame("psd_srh_il6.dta")
# Abhimanyu - Extract IL6 and omit NAs
IL6Abhimanyu <- data.frame(Abhimanyu_df$IL.6)
IL6Abhimanyu[IL6Abhimanyu == 0] <- NA
setwd("C:/Users/lovea/MetaResearch/cytokines_distributions/IL6_data")
# Read data from files
Abhimanyu_df <- read.csv2("Abhimanyu_derivation.csv")
Sothern_df <- read.csv2("Sothern1995IndividualData.csv")
Imaeda_df <- read.csv2("Imaeda derivation.csv", na.strings = c("", "NA"), check.names = F, encoding = "UTF-8")
Imaeda_v_df <- read.csv2("Imaeda validation.csv", na.strings = c("", "NA"), check.names = F, encoding = "UTF-8")
Wand_df <- read.csv2("Wand (2016) data.csv")
MIDUS_df <- load("29282-0001-Data.rda")
IL6MIDUS <- data.frame(da29282.0001$B4BMSDIL6)
IL6MIDUS2 <- data.frame(da29282.0001$B4BIL6)
MIDJA_df <- load("34969-0001-Data.rda")
IL6MIDJA <- data.frame(da34969.0001$J2BIL6)
Lekander <- read.dta("psd_srh_il6.dta")
Lekander_df <- data.frame("psd_srh_il6.dta")
# Abhimanyu - Extract IL6 and omit NAs
IL6Abhimanyu <- data.frame(Abhimanyu_df$IL.6)
IL6Abhimanyu[IL6Abhimanyu == 0] <- NA
IL6Abhimanyu <- na.omit(IL6Abhimanyu)
# Wand - extract IL-6
IL6Wand <- data.frame(Wand_df$IL6.d1.4h, Wand_df$IL6.d1.16h, Wand_df$IL6.d2.4h, Wand_df$IL6.d2.16h, Wand_df$IL6.d3.4h, Wand_df$IL6.d3.16h, Wand_df$IL6.d4.4h, Wand_df$IL6.d4.16h)
IL6Wand_stacked <- data.frame(stack(IL6Wand))[1]
# Imaeda - extract IL-6
IL6Imaeda <- data.frame(Imaeda_df$`Interleukin-6, pg/mL`)
IL6Imaeda_v <- data.frame(Imaeda_v_df$`Interleukin-6, pg/mL`)
# Sothern - re-arrange data into one column and extract IL6
Sothern_df <- data.frame(stack(Sothern_df))
IL6Sothern <- data.frame(Sothern_df$values)
# Lekander - extract IL6 and omit NAs
IL6Lekander <- data.frame(Lekander$il6m)
IL6Lekander<- na.omit(IL6Lekander)
# Stack data in a 2 column df
IL6_only <- bind_rows(IL6Abhimanyu, IL6Wand_stacked, IL6Imaeda, IL6Imaeda_v, IL6Sothern, IL6Lekander)
colnames(IL6_only) <- c("Abhimanyu", "Wand", "Imaeda", "Imaeda_v", "Sothern", "Lekander")
IL6_only_stacked <- data.frame(stack(IL6_only)) %>% filter(!is.na(values))
# To simplify the syntax when writing files
setwd("output")
# To simplify the syntax when writing files
setwd("../output")
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
write.csv(outputs_out, "all_outputs.csv", row.names = F)
write.csv(outputs, "all_outputs.csv", row.names = F)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]))
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]))
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
View(outputs)
View(IL6_only_stacked)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
write.csv(outputs, "../all_outputs.csv", row.names = F)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
write(err, "./err.txt")
return(NA)
}, warning=function(war) {
write(err, "./war.txt")
return(NA)
})
plot(test)
})
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
View(IL6MIDUS)
View(IL6MIDUS2)
# Stack data in a 2 column df
IL6_only <- bind_rows(IL6Abhimanyu, IL6Wand_stacked, IL6Imaeda, IL6Imaeda_v, IL6Sothern, IL6Lekander, IL6MIDUS, IL6MIDUS2, IL6MIDJA)
colnames(IL6_only) <- c("Abhimanyu", "Wand", "Imaeda", "Imaeda_v", "Sothern", "Lekander", "IL6MIDUS", "IL6MIDUS2", "IL6MIDJA")
IL6_only_stacked <- data.frame(stack(IL6_only)) %>% filter(!is.na(values))
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
tryCatch({
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
}, error=function(err) {
return(NA)
}, warning=function(war) {
return(NA)
})
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
write.csv(outputs, "../all_outputs.csv", row.names = F)
require(fitdistrplus)
Abhimanyu_derivation <- read.csv2("Abhimanyu_derivation.csv")
Abhimanyu_derivation <- Abhimanyu_derivation[1:216, ] # Remove empty lines
Abhimanyu_validation <- read.csv2("Abhimanyu_validation.csv")
Abhimanyu_followup <- read.csv2("Abhimanyu_followup.csv")
IL6 <- data.frame(IL6 = Abhimanyu_derivation$IL.6[Abhimanyu_derivation$Class.Labels == "HC"], dataset = "Abhimanyu_derivation")
IL6$logIL6 <- log(IL6$IL6)
setwd("C:/Users/lovea/MetaResearch/cytokines_distributions")
Abhimanyu_derivation <- read.csv2("Abhimanyu_derivation.csv")
Abhimanyu_derivation <- Abhimanyu_derivation[1:216, ] # Remove empty lines
Abhimanyu_validation <- read.csv2("Abhimanyu_validation.csv")
Abhimanyu_followup <- read.csv2("Abhimanyu_followup.csv")
IL6 <- data.frame(IL6 = Abhimanyu_derivation$IL.6[Abhimanyu_derivation$Class.Labels == "HC"], dataset = "Abhimanyu_derivation")
IL6$logIL6 <- log(IL6$IL6)
IL6$logIL6[IL6$logIL6 == -Inf] <- log(0.3) # Set 0 values to reasonable lower bound
test <- fitdist(IL6$IL6, distr = dnorm)
summary(test)
plot(test)
test2 <- fitdist(IL6$IL6, distr = dexp)
test_summary <- summary(test2)
plot(test2)
setwd("C:/Users/lovea/MetaResearch/cytokines_distributions/IL6_data")
# To simplify the syntax when writing files
setwd("../output")
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
plot(test)
})
# For dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dexp)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
plot(test)
})
test <- fitdist(IL6Abhimanyu, distr = dnorm)
test <- fitdist(IL6Abhimanyu$Abhimanyu_df.IL.6, distr = dnorm)
########### MANUAL TESTING ####################
test <- fitdist(IL6Abhimanyu$Abhimanyu_df.IL.6, distr = dnorm)
model_summary <- summary(test)
########### MANUAL TESTING ####################
test <- fitdist(IL6Abhimanyu$Abhimanyu_df.IL.6, distr = dexp)
model_summary <- summary(test)
View(model_summary)
########### MANUAL TESTING ####################
test <- fitdist(IL6Wand_stacked$values, distr = dexp)
View(IL6Wand_stacked)
View(IL6_only_stacked)
########### MANUAL TESTING ####################
test <- fitdist(IL6Imaeda$Imaeda_df..Interleukin.6..pg.mL., distr = dexp)
View(IL6Imaeda)
IL6Imaeda_filtered <- IL6Imaeda %>% filter(!is.na(Imaeda_df..Interleukin.6..pg.mL.))
View(IL6Imaeda_filtered)
test <- fitdist(IL6Imaeda_filtered$Imaeda_df..Interleukin.6..pg.mL., distr = dexp)
# Group by dataset, for each group run the model and export csv file, once for dnorm and once for dexp
IL6_only_stacked %>%
group_by(ind) %>%
group_walk(~{
test <- fitdist(.x$values, distr = dnorm)
model_summary <- summary(test)
#group_walk silences output to console, going around this by writing csv files instead
df <- data.frame(distr = "dnorm", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dnorm.csv", .y$ind[1]), row.names = F)
test <- fitdist(.x$values/1000, distr = dexp)
model_summary <- summary(test)
df <- data.frame(distr="dexp", dataset=.y$ind[1], loglike=model_summary$loglik, aic=model_summary$aic, bic=model_summary$bic)
write.csv(df, sprintf("%s-fitdistr-dexp.csv", .y$ind[1]), row.names = F)
plot(test)
})
#Read and merge the CSV files again
outputs <- list.files(path='.') %>%
lapply(read_csv) %>%
bind_rows
write.csv(outputs, "../all_outputs.csv", row.names = F)
